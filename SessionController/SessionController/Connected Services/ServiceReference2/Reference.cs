//------------------------------------------------------------------------------
// <auto-generated>
//     Bu kod araç tarafından oluşturuldu.
//     Çalışma Zamanı Sürümü:4.0.30319.42000
//
//     Bu dosyada yapılacak değişiklikler yanlış davranışa neden olabilir ve
//     kod yeniden oluşturulursa kaybolur.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SessionController.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.UserAuthenticationSoap")]
    public interface UserAuthenticationSoap {
        
        // CODEGEN: CheckRequest iletisinde üst bilgi olduğundan ileti sözleşmesi oluşturuluyor
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SessionController.ServiceReference2.CheckResponse Check(SessionController.ServiceReference2.CheckRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Check", ReplyAction="*")]
        System.Threading.Tasks.Task<SessionController.ServiceReference2.CheckResponse> CheckAsync(SessionController.ServiceReference2.CheckRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("userName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Check", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public SessionController.ServiceReference2.UserDetails UserDetails;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        public CheckRequest() {
        }
        
        public CheckRequest(SessionController.ServiceReference2.UserDetails UserDetails, string username, string password) {
            this.UserDetails = UserDetails;
            this.username = username;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CheckResult;
        
        public CheckResponse() {
        }
        
        public CheckResponse(bool CheckResult) {
            this.CheckResult = CheckResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UserAuthenticationSoapChannel : SessionController.ServiceReference2.UserAuthenticationSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserAuthenticationSoapClient : System.ServiceModel.ClientBase<SessionController.ServiceReference2.UserAuthenticationSoap>, SessionController.ServiceReference2.UserAuthenticationSoap {
        public UserDetails UserDetailsValue { get; internal set; }

        public UserAuthenticationSoapClient() {
        }
        
        public UserAuthenticationSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserAuthenticationSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserAuthenticationSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserAuthenticationSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SessionController.ServiceReference2.CheckResponse SessionController.ServiceReference2.UserAuthenticationSoap.Check(SessionController.ServiceReference2.CheckRequest request) {
            return base.Channel.Check(request);
        }
        
        public bool Check(SessionController.ServiceReference2.UserDetails UserDetails, string username, string password) {
            SessionController.ServiceReference2.CheckRequest inValue = new SessionController.ServiceReference2.CheckRequest();
            inValue.UserDetails = UserDetails;
            inValue.username = username;
            inValue.password = password;
            SessionController.ServiceReference2.CheckResponse retVal = ((SessionController.ServiceReference2.UserAuthenticationSoap)(this)).Check(inValue);
            return retVal.CheckResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SessionController.ServiceReference2.CheckResponse> SessionController.ServiceReference2.UserAuthenticationSoap.CheckAsync(SessionController.ServiceReference2.CheckRequest request) {
            return base.Channel.CheckAsync(request);
        }
        
        public System.Threading.Tasks.Task<SessionController.ServiceReference2.CheckResponse> CheckAsync(SessionController.ServiceReference2.UserDetails UserDetails, string username, string password) {
            SessionController.ServiceReference2.CheckRequest inValue = new SessionController.ServiceReference2.CheckRequest();
            inValue.UserDetails = UserDetails;
            inValue.username = username;
            inValue.password = password;
            return ((SessionController.ServiceReference2.UserAuthenticationSoap)(this)).CheckAsync(inValue);
        }
    }
}
